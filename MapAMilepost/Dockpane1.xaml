<UserControl x:Class="MapAMilepost.Dockpane1View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"   
             xmlns:ui="clr-namespace:MapAMilepost;assembly=MapAMilepost"
             xmlns:viewmodels="clr-namespace:MapAMilepost.ViewModels" 
             xmlns:views="clr-namespace:MapAMilepost.Views"
             xmlns:extensions="clr-namespace:ArcGIS.Desktop.Extensions;assembly=ArcGIS.Desktop.Extensions"
             xmlns:frameworkControls="clr-namespace:ArcGIS.Desktop.Framework.Controls;assembly=ArcGIS.Desktop.Framework"
             xmlns:valueConverters="clr-namespace:MapAMilepost.ValueConverters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d"
             d:DesignHeight="600" 
             x:Name="MainUserControl"
             >

    <UserControl.DataContext>
        <viewmodels:MainViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <valueConverters:VisibilityConverter x:Key="VisibilityConverter"/>
            <valueConverters:SettingsEnabledConverter x:Key="SettingsEnabledConverter"/>
            <valueConverters:SettingsButtonLabelConverter x:Key="SettingsButtonLabelConverter"/>
            <viewmodels:MainViewModel x:Key="MainViewModel" d:IsDataSource="True"/>
            <views:MapLineView x:Key="MapLineView"/>
            <views:MapPointView x:Key="MapPointView"/>
            <SolidColorBrush x:Key="SelectedBrush" Color="White"/>
            <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
            <SolidColorBrush x:Key="DeselectedBrush" Color="LightGray" />
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="ThemeBlue" Color="#007ac1"/>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border 
                                Name="Border"
                                Margin="0,0,-4,0" 
                                Background="{StaticResource DeselectedBrush}"
                                BorderBrush="{StaticResource  SolidBorderBrush}" 
                                BorderThickness="1,1,1,1" 
                                CornerRadius="0,0,0,0" >
                                <StackPanel Orientation="Vertical">
                                    <TextBlock x:Name="contentPresenter"
                                        Margin="10 10 10 0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontSize="12"
                                        Foreground="Black"
                                        Text="{TemplateBinding Header}"
                                    />
                                    <Line 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Bottom"  
                                        X1="00" Y1="0"
                                        X2="50" Y2="0"
                                        Stroke="{DynamicResource ThemeBlue}"
                                        StrokeThickness="4"
                                        Margin="10 10 10 10"
                                        Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVis}}"
                                    />
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBrush}" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="FrameworkElement" x:Key="TabLine">
                <Setter Property="Visibility" Value="Hidden"/>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <extensions:DesignOnlyResourceDictionary Source="pack://application:,,,/ArcGIS.Desktop.Framework;component\Themes\Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer Background="white" VerticalScrollBarVisibility="Visible">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" x:Name="PageTabRow"/>
                <RowDefinition Height="Auto" x:Name="ViewmodelHandlerRow"/>
                <RowDefinition Height="Auto" x:Name="SettingsRow"/>
                <RowDefinition Height="*" x:Name="CreateLayerModalRow"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <DockPanel x:Name="PageTabs" Visibility="{Binding AddInReady, Converter={StaticResource BoolToVis}}" Grid.Row="0" Grid.Column="0" DataContext="{DynamicResource MainViewModel}" Background="white" LastChildFill="true" KeyboardNavigation.TabNavigation="Local" Height="50">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding OnShowCommand}" CommandParameter="{Binding ElementName=PageTabs}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabControl Height="50" x:Name="controlsGrid">
                    <TabItem  x:Name="MapPointTab" Height="50" Width="80" Header="Map a Point">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding SelectPageCommand}" CommandParameter="{Binding ElementName=MapPointTab}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TabItem>
                    <TabItem  x:Name="MapLineTab" Height="50" Width="80" Header="Map a Line">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding SelectPageCommand}" CommandParameter="{Binding ElementName=MapLineTab}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TabItem>
                    <TabItem  x:Name="MapTableTab" Height="50" Width="80" Header="Map a Table">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding SelectPageCommand}" CommandParameter="{Binding ElementName=MapTableTab}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TabItem>
                </TabControl>
            </DockPanel>
            <Border  x:Name="ViewmodelHandler" Visibility="{Binding AddInReady, Converter={StaticResource BoolToVis}}" DataContext="{DynamicResource MainViewModel}" Grid.Row="1" BorderBrush="{StaticResource SolidBorderBrush}"  Background="White">
                <ScrollViewer Background="white" VerticalScrollBarVisibility="Auto" >
                    <ContentControl DataContext="{DynamicResource MainViewModel}" Background="white" ClipToBounds="True" Margin="0,10,0,0" VerticalAlignment="Top" Grid.Row="1" Content="{Binding SelectedViewModel}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type viewmodels:MapPointViewModel}">
                                <views:MapPointView/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:MapLineViewModel}">
                                <views:MapLineView/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:MapTableViewModel}">
                                <views:MapTableView/>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </ScrollViewer>
            </Border>
            <Border x:Name="Settings" IsEnabled="{Binding SelectedViewModel, Converter={StaticResource SettingsEnabledConverter}}" Visibility="{Binding AddInReady, Converter={StaticResource BoolToVis}}" DataContext="{DynamicResource MainViewModel}" Grid.Row="2" Grid.Column="0" Background="White" BorderThickness="1px" Padding="0,10,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25px"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Grid.Column="0" Width="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Command="{Binding ToggleSettingsVisibleCommand}" Background="White" Content="{Binding SettingsMenuVisible, Converter={StaticResource SettingsButtonLabelConverter}}"></Button>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Settings" VerticalAlignment="Center"/>
                    <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding SettingsMenuVisible, Converter={StaticResource BoolToVis}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50px"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <!-- <TextBlock Grid.Column="0" Grid.Row="0" Text="Response Date" HorizontalAlignment="Right" Margin="0 0 10 0" VerticalAlignment="Center" TextWrapping="Wrap"/>-->
                        <!--<DatePicker Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="left" Width="110px" SelectedDate="{Binding ResponseDate, Mode=TwoWay, StringFormat='M/d/yyyy', UpdateSourceTrigger=PropertyChanged}"/>-->
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="Reference Date" HorizontalAlignment="Right" Margin="0 0 10 0" VerticalAlignment="Center"/>
                        <DatePicker Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="left" Width="110px" SelectedDate="{Binding ReferenceDate, Mode=TwoWay, StringFormat='M/d/yyyy', UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Search Distance" HorizontalAlignment="Right" Margin="0 0 10 0" VerticalAlignment="Center"/>
                        <TextBox Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="left" Width="110px" Text="{Binding SearchRadius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Grid>
            </Border>
            <Border x:Name="InfoModal" DataContext="{DynamicResource MainViewModel}" Visibility="{Binding AddInReady, Converter={StaticResource VisibilityConverter},ConverterParameter='true'}" Grid.Row="3" Background="White">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock FontWeight="Bold" Foreground="{DynamicResource ThemeBlue}" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="20px" TextWrapping="Wrap" Grid.Row="0" Width="Auto" Margin="10 0 10 10" Text="{Binding ModalInfo.Title}"/>
                    <TextBlock VerticalAlignment="Top" TextWrapping="Wrap" HorizontalAlignment="Center" Grid.Row="1" Width="Auto" Margin="10 10 10 10" Text="{Binding ModalInfo.Caption}"/>
                    <Border Visibility="{Binding ModalInfo.ShowButton, Converter={StaticResource BoolToVis}}" Grid.Row="2" VerticalAlignment="Top">
                        <Button Width="80px" Height="20px" Margin="10 10 10 10" Background="White" BorderBrush="{DynamicResource ThemeBlue}" Command="{Binding CreateGraphicsLayerCommand}">Click Here</Button>
                    </Border>
                    <Border Visibility="{Binding ModalInfo.ShowLoader, Converter={StaticResource BoolToVis}}" Grid.Row="2" VerticalAlignment="Top">
                        <fa:ImageAwesome Foreground="{DynamicResource ThemeBlue}" Icon="Spinner" Spin="True" SpinDuration="5" Width="20px" Height="20px"/>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </ScrollViewer>
</UserControl>