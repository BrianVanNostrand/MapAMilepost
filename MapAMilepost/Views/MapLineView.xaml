<UserControl x:Class="MapAMilepost.Views.MapLineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:ArcGIS.Desktop.Framework.Controls;assembly=ArcGIS.Desktop.Framework"
             xmlns:viewmodels="clr-namespace:MapAMilepost.ViewModels" 
             mc:Ignorable="d" 
             xmlns:valueConverters="clr-namespace:MapAMilepost.ValueConverters"
             xmlns:theme ="../Themes/ButtonTheme.xaml"
             xmlns:b ="http://schemas.microsoft.com/xaml/behaviors"
             d:DesignWidth="364"
             Width="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <valueConverters:BorderConverter x:Key="BorderConverter"/>
            <valueConverters:BooleanInverter x:Key="BooleanInverter"/>
            <valueConverters:DirectionConverter x:Key="DirectionConverter"/>
            <valueConverters:NumberConverter x:Key="NumberConverter"/>
            <valueConverters:BrushConverter x:Key="BrushConverter"/>
            <valueConverters:ElementHeightConverter x:Key="ElementHeightConverter"/>
            <valueConverters:ComboBoxDirectionConverter x:Key="ComboBoxDirectionConverter"/>
            <valueConverters:InteractionButtonLabelConverter x:Key="InteractionButtonLabelConverter"/>
            <valueConverters:InputModeButtonLabelConverter x:Key="InputModeButtonLabelConverter"/>
            <valueConverters:VisibilityConverter x:Key="VisibilityConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/ButtonTheme.xaml" />
                <ResourceDictionary Source="../Themes/DataGridRowTheme.xaml" />
                <ResourceDictionary Source="../Themes/SelectableTextStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="MainGrid" Background="White" IsEnabled="{Binding isEnabled}" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="SearchDistanceRow" Height="*"/>
            <RowDefinition/>
            <RowDefinition Height="30px"/>
            <RowDefinition Height="200px"/>
            <RowDefinition Height="30px"/>
        </Grid.RowDefinitions>
        <Grid  Grid.Row="0" x:Name="SoeArgsGrid" Margin="0 0 0 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="125px"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20px"/>
                <RowDefinition Height="{Binding IsMapMode, Converter={StaticResource ElementHeightConverter}}"/>
                <RowDefinition Height="{Binding IsMapMode, Converter={StaticResource ElementHeightConverter}}"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" x:Name="ToggleGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Grid.Row="0" Style="{StaticResource SelectableTextBox}" HorizontalContentAlignment="Center">Mode</TextBox>
                <Button Grid.Column="1" Grid.Row="0" Command="{Binding ChangeModeCommand}" FontSize="7pt" HorizontalContentAlignment="Center"  Height="20" VerticalAlignment="Top" Content="{Binding IsMapMode, Converter={StaticResource InputModeButtonLabelConverter}}"/>
            </Grid>
            <TextBox x:Name="MapPointSearchDistanceStartLabel" Grid.Row="1" Grid.Column="0" Style="{StaticResource SelectableTextBox}">Search Distance (Start)</TextBox>
            <TextBox x:Name="MapStartPointSearcDistanceTextBox"  Grid.Row="1" Grid.Column="1" Text="{Binding LineArgs.StartArgs.SearchRadius, Mode=TwoWay}" ToolTip="Set the search distance to find the route location nearest the mapped start point."/>
            <TextBox x:Name="FeetStartLabel" Grid.Row="1" Grid.Column="2" Style="{StaticResource SelectableTextBox}">Feet</TextBox>
            <TextBox x:Name="MapPointSearchDistanceEndLabel" Grid.Row="2" Grid.Column="0" Style="{StaticResource SelectableTextBox}">Search Distance (End)</TextBox>
            <TextBox x:Name="MapEndPointSearcDistanceTextBox"  Grid.Row="2" Grid.Column="1" Text="{Binding LineArgs.EndArgs.SearchRadius, Mode=TwoWay}" ToolTip="Set the search distance to find the route location nearest the mapped end point."/>
            <TextBox x:Name="FeetEndLabel" Grid.Row="2" Grid.Column="2" Style="{StaticResource SelectableTextBox}">Feet</TextBox>
        </Grid>
        <Grid Grid.Row="1" x:Name="SOEResultsGrid" Margin="0 0 0 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20px"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/><!-->Header<-->
                <RowDefinition/><!-->Route<-->
                <RowDefinition/><!-->SRMP<-->
                <RowDefinition/><!-->ARM<-->
                <RowDefinition Height="{Binding IsMapMode, Converter={StaticResource ElementHeightConverter}}"/><!-->X<-->
                <RowDefinition Height="{Binding IsMapMode, Converter={StaticResource ElementHeightConverter}}"/><!-->Y<-->
                <RowDefinition/><!-->Direction<-->
                <RowDefinition/><!-->Back<-->
                <RowDefinition Height="{Binding IsMapMode, Converter={StaticResource ElementHeightConverter}}"/><!-->Realignment<-->
                <RowDefinition Height="{Binding IsMapMode, Converter={StaticResource ElementHeightConverter}}"/><!-->Response<-->
            </Grid.RowDefinitions>
            <!--Header-->
            <TextBox Background="#cfd8ff" Grid.Column="0" Grid.Row="0" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" Style="{StaticResource SelectableTextBox}">Results</TextBox>
            <TextBox Background="#cfd8ff" Grid.Column="2" Grid.Row="0" Style="{StaticResource SelectableTextBox}">Start</TextBox>
            <TextBox Background="#cfd8ff" Grid.Column="3" Grid.Row="0" Style="{StaticResource SelectableTextBox}">End</TextBox>
            <!--MP Type Radio Buttons-->
            <RadioButton Grid.Column="0" Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}" Command="{Binding ChangeMPTypeCommand}" GroupName="milepostType" CommandParameter="SRMP" Grid.Row="2" IsChecked="True"/>
            <RadioButton Grid.Column="0" Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}" Command="{Binding ChangeMPTypeCommand}" GroupName="milepostType" CommandParameter="ARM" Grid.Row="3"/>
            <!--Labels-->
            <TextBox Grid.Column="1" Grid.Row="1" HorizontalContentAlignment="Center" ToolTip="The route that the location belongs to." Style="{StaticResource SelectableTextBox}">Route</TextBox>
            <TextBox Grid.Column="1" Grid.Row="2" HorizontalContentAlignment="Center" ToolTip="SRMP measure of the route location found." Style="{StaticResource SelectableTextBox}">SRMP</TextBox>
            <TextBox Grid.Column="1" Grid.Row="3" HorizontalContentAlignment="Center" ToolTip="ARM measure of the route location found." Style="{StaticResource SelectableTextBox}">ARM</TextBox>
            <TextBox Grid.Column="1" Grid.Row="4" HorizontalContentAlignment="Center" ToolTip="X-coordinate of the route location found." Style="{StaticResource SelectableTextBox}">X</TextBox>
            <TextBox Grid.Column="1" Grid.Row="5" HorizontalContentAlignment="Center" ToolTip="Y-coordinate of the route location found." Style="{StaticResource SelectableTextBox}">Y</TextBox>
            <TextBox Grid.Column="1" Grid.Row="6" HorizontalContentAlignment="Center" ToolTip="Whether or not the route location is in the decreasing direction of the roadway (Southbound or Westbound)." Style="{StaticResource SelectableTextBox}">Direction</TextBox>
            <TextBox Grid.Column="1" Grid.Row="7" HorizontalContentAlignment="Center" ToolTip="Whether or not the route location represent back mileage." Style="{StaticResource SelectableTextBox}">Back</TextBox>
            <TextBox Grid.Column="1" Grid.Row="8" HorizontalContentAlignment="Center" ToolTip="Realignment date of the route location." Style="{StaticResource SelectableTextBox}">Realignment Date</TextBox>
            <TextBox Grid.Column="1" Grid.Row="9" HorizontalContentAlignment="Center" ToolTip="Response date of the route location found." Style="{StaticResource SelectableTextBox}">Response Date</TextBox>
            <!--Start Point Bindings-->
            <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding LineResponse.StartResponse.Route, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}" IsReadOnly="{Binding IsMapMode}" BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"/>
            <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding LineResponse.StartResponse.Srmp, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}" IsReadOnly="{Binding IsMapMode}" BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"/>
            <TextBox Grid.Column="2" Grid.Row="3" Text="{Binding LineResponse.StartResponse.Arm, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}" IsReadOnly="{Binding IsMapMode}" BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"/>
            <TextBox Grid.Column="2" Grid.Row="4" Text="{Binding LineResponse.StartResponse.RouteGeometry.x, Converter={StaticResource NumberConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            <TextBox Grid.Column="2" Grid.Row="5" Text="{Binding LineResponse.StartResponse.RouteGeometry.y, Converter={StaticResource NumberConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            <ComboBox 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}"
                Grid.Column="2" Grid.Row="6" 
                IsEditable ="False" 
                BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"
                ItemsSource="{Binding Directions}"
                SelectedValue="{Binding LineResponse.StartResponse.Decrease, Converter={StaticResource ComboBoxDirectionConverter}, Mode=TwoWay}"
            />
            <TextBox Grid.Column="2" Grid.Row="6" Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}}" Text="{Binding LineResponse.StartResponse.Decrease, ConverterParameter='PreviewPane', Converter={StaticResource DirectionConverter}}" Style="{StaticResource SelectableTextBox}"/>
            <ComboBox 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}"
                Grid.Column="2" Grid.Row="7" 
                IsEditable ="False" 
                BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"
                ItemsSource="{Binding AheadBack}"
                SelectedValue="{Binding LineResponse.StartResponse.Back, Mode=TwoWay}"
            />
            <TextBox Grid.Column="2" Grid.Row="7" Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}}" Text="{Binding LineResponse.StartResponse.Back, ConverterParameter='PreviewPane', Converter={StaticResource DirectionConverter}}" Style="{StaticResource SelectableTextBox}"/>
            <TextBox Grid.Column="2" Grid.Row="8" Text="{Binding LineResponse.StartResponse.RealignmentDate, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            <TextBox Grid.Column="2" Grid.Row="9" Text="{Binding LineResponse.StartResponse.ResponseDate, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
             <!--End Point Bindings-->
            <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding LineResponse.EndResponse.Route, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}" IsReadOnly="{Binding IsMapMode}" BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"/>
            <TextBox Grid.Column="3" Grid.Row="2" Text="{Binding LineResponse.EndResponse.Srmp, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}" IsReadOnly="{Binding IsMapMode}" BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"/>
            <TextBox Grid.Column="3" Grid.Row="3" Text="{Binding LineResponse.EndResponse.Arm, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}" IsReadOnly="{Binding IsMapMode}" BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"/>
            <TextBox Grid.Column="3" Grid.Row="4" Text="{Binding LineResponse.EndResponse.RouteGeometry.x, Converter={StaticResource NumberConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            <TextBox Grid.Column="3" Grid.Row="5" Text="{Binding LineResponse.EndResponse.RouteGeometry.y, Converter={StaticResource NumberConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            <ComboBox 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}"
                Grid.Column="3" Grid.Row="6" 
                IsEditable ="False" 
                BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"
                ItemsSource="{Binding Directions}"
                SelectedValue="{Binding LineResponse.EndResponse.Decrease, Converter={StaticResource ComboBoxDirectionConverter}, Mode=TwoWay}"
            />
            <TextBox Grid.Column="3" Grid.Row="6" Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}}" Text="{Binding LineResponse.EndResponse.Decrease, ConverterParameter='PreviewPane', Converter={StaticResource DirectionConverter}}" Style="{StaticResource SelectableTextBox}"/>
            <ComboBox 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}"
                Grid.Column="3" Grid.Row="7" 
                IsEditable ="False" 
                BorderThickness="{Binding IsMapMode, Converter={StaticResource BorderConverter}}"
                ItemsSource="{Binding AheadBack}"
                SelectedValue="{Binding LineResponse.EndResponse.Back, Mode=TwoWay}"
            />
            <TextBox Grid.Column="3" Grid.Row="7"  Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}}" Text="{Binding PointResponse.Back, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource SelectableTextBox}"/>
            <TextBox Grid.Column="3" Grid.Row="8" Text="{Binding LineResponse.EndResponse.RealignmentDate, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            <TextBox Grid.Column="3" Grid.Row="9" Text="{Binding LineResponse.EndResponse.ResponseDate, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SelectableTextBox}"/>
            
            <Border Grid.ColumnSpan="4" Grid.Row="2" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="3" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="4" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="5" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="6" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="7" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="8" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.Row="9" BorderBrush="#b3c1fc" BorderThickness="0,.5,0,0" Background="{x:Null}" />
        </Grid>
        <Grid Grid.Row="2" x:Name="MapToolControlsGrid">
            <Grid.Resources>
                <ResourceDictionary Source="../Themes/ButtonTheme.xaml" />
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button
                x:Name="MapStartPointExecuteButtonMap" 
                Style="{StaticResource whiteButton}"
                Grid.Row="3" Grid.Column="0" 
                CommandParameter="{Binding SessionActive}" 
                Command="{Binding InteractionCommand}" 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}}"
                Content="{Binding SessionActive, Converter={StaticResource InteractionButtonLabelConverter}, ConverterParameter='Start'}"
            />
            <Button
                x:Name="MapStartPointExecuteButtonForm" 
                Style="{StaticResource whiteButton}"
                Grid.Row="3" Grid.Column="0" 
                CommandParameter="start" 
                Command="{Binding InteractionCommand}" 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}"
                Content="Get Start"
            />
            <Button 
                x:Name="MapEndPointExecuteButtonMap" 
                Style="{StaticResource whiteButton}"
                Grid.Row="3" Grid.Column="1" 
                CommandParameter="{Binding SessionActive}"  
                Command="{Binding InteractionCommand}" 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}}"
                Content="{Binding SessionActive, Converter={StaticResource InteractionButtonLabelConverter}, ConverterParameter='End'}"
            />
            <Button 
                x:Name="MapEndPointExecuteButtonForm" 
                Style="{StaticResource whiteButton}"
                Grid.Row="3" Grid.Column="1" 
                CommandParameter="end" 
                Command="{Binding InteractionCommand}" 
                Visibility="{Binding IsMapMode, Converter={StaticResource VisibilityConverter}, ConverterParameter='true'}"
                Content="Get End"
            />
            <Button x:Name="ClearResultsButton" Grid.Row="3" Grid.Column="2" CommandParameter="{Binding ElementName=LinesGrid}" Command="{Binding UpdateSelectionCommand}" Style="{StaticResource whiteButton}" ToolTip="Clear the selection in this tab.">Clear</Button>
            <Button x:Name="SaveResultsButton" Grid.Row="3" Grid.Column="3" CommandParameter="{Binding ElementName=LinesGrid}" Command="{Binding SaveLineResultCommand}" ToolTip="Save selection to the results grid.">
                <Button.Style>
                    <Style BasedOn="{StaticResource whiteButton}" TargetType="{x:Type Button}">
                        <Setter Property="Content" Value="Save Result" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSaved}" Value="True">
                                <Setter Property="Content" Value="Saved" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSaved}" Value="False">
                                <Setter Property="Content" Value="Save Result" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Height="200px" Grid.Row="3" x:Name="ResultsTableGrid" >
            <Grid.Resources>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowResultsTable}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowResultsTable}" Value="false">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="30px"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40px"/>
                    <ColumnDefinition Width="40px"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" Grid.Column="0" Style="{StaticResource SelectableTextBox}">Lines:</TextBox>
                <Label Grid.Row="0" Grid.Column="1" Content="{Binding LineResponses.Count}"/>
            </Grid>
            <ScrollViewer  Grid.ColumnSpan="3" Grid.Row="3">
                <DataGrid CanUserAddRows="False" CanUserDeleteRows="False" x:Name="LinesGrid" HorizontalAlignment="Stretch" AutoGenerateColumns="False" VerticalAlignment="Stretch" ItemsSource="{Binding LineResponses}" CellStyle="{DynamicResource DataGridCellStyle}">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightBlue" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Route" Binding="{Binding StartResponse.Route, Mode=OneWay}"/>
                        <DataGridTextColumn Header="ARM" Binding="{Binding StartResponse.Arm, Mode=OneWay}"/>
                        <DataGridTextColumn Header="EndARM" Binding="{Binding EndResponse.Arm, Mode=OneWay}"/>
                        <DataGridTextColumn Header="SRMP" Binding="{Binding StartResponse.Srmp, Mode=OneWay}"/>
                        <DataGridTextColumn Header="EndSRMP" Binding="{Binding EndResponse.Srmp, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Direction" Binding="{Binding StartResponse.Decrease,Mode=OneWay, Converter={StaticResource DirectionConverter}}"/>
                        <DataGridTextColumn Header="Back" Binding="{Binding StartResponse.Back, Mode=OneWay}"/>
                        <DataGridTextColumn Header="EndBack" Binding="{Binding EndResponse.Back, Mode=OneWay}"/>
                        <DataGridTextColumn Header="X" Binding="{Binding StartResponse.RouteGeometry.x, Converter={StaticResource NumberConverter}, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Y" Binding="{Binding StartResponse.RouteGeometry.y, Converter={StaticResource NumberConverter},  Mode=OneWay}"/>
                        <DataGridTextColumn Header="EndX" Binding="{Binding EndResponse.RouteGeometry.x, Mode=OneWay}"/>
                        <DataGridTextColumn Header="EndY" Binding="{Binding EndResponse.RouteGeometry.y, Mode=OneWay}"/>
                    </DataGrid.Columns>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseLeftButtonUp">
                            <b:InvokeCommandAction CommandParameter="{Binding ElementName=LinesGrid}" Command="{Binding UpdateSelectionCommand}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </DataGrid>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="4" x:Name="ResultsTableControls">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowResultsTable}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowResultsTable}" Value="false">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Button Grid.Row="2" Grid.Column="0" IsEnabled="False" Style="{StaticResource whiteButton}" Background="lightgray">
                Export Data
            </Button>
            <Button x:Name="DeleteItemsButton" Grid.Row="2" Grid.Column="1" Command="{Binding DeleteItemsCommand}" Style="{StaticResource whiteButton}">
                Delete Record(s)
            </Button>
            <Button x:Name="ClearItemsButton" Grid.Row="2" Grid.Column="2"  Command="{Binding ClearItemsCommand}" Style="{StaticResource whiteButton}">
                Clear Table
            </Button>
        </Grid>
    </Grid>
</UserControl>